import threading

class FibonacciThread(threading.Thread):
    def run(self):
        fib_list = [0, 1]
        while fib_list[-1] < 10000:
            next_fib = fib_list[-1] + fib_list[-2]
            fib_list.append(next_fib)
        print("Fibonacci Series:")
        print(fib_list)

class SquareThread(threading.Thread):
    def run(self):
        square_list = [num**2 for num in range(1, 10001)]
        print("Square numbers:")
        print(square_list)

class CubeThread(threading.Thread):
    def run(self):
        cube_list = [num**3 for num in range(1, 10001)]
        print("Cube numbers:")
        print(cube_list)

fibonacci_thread = FibonacciThread()
square_thread = SquareThread()
cube_thread = CubeThread()

fibonacci_thread.start()
square_thread.start()
cube_thread.start()

fibonacci_thread.join()
square_thread.join()
cube_thread.join()